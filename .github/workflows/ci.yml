name: CI

on:
    push:
        branches: [main, develop]
    pull_request:
        branches: [main]

jobs:
    test-linux:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Cache Swiftly installation
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.local/share/swiftly
                      swiftly-*.tar.gz
                  key: swiftly-linux-${{ runner.arch }}-v2

            - name: Cache Swift toolchain
              uses: actions/cache@v4
              with:
                  path: ~/.local/share/swiftly/toolchains
                  key: swift-toolchain-linux-${{ hashFiles('.swift-version') }}-${{ runner.arch }}-v2

            - name: Cache APT packages
              uses: actions/cache@v4
              with:
                  path: /var/cache/apt
                  key: apt-cache-gtk4-${{ runner.os }}-v1
                  restore-keys: |
                      apt-cache-gtk4-${{ runner.os }}-

            - name: Cache Swift build
              uses: actions/cache@v4
              with:
                  path: .build
                  key: swift-build-linux-${{ hashFiles('Package.swift', 'Sources/**/*.swift') }}-v1
                  restore-keys: |
                      swift-build-linux-

            - name: Install Swiftly
              run: |
                  if [ ! -f "${SWIFTLY_HOME_DIR:-$HOME/.local/share/swiftly}/bin/swiftly" ]; then
                      curl -O https://download.swift.org/swiftly/linux/swiftly-$(uname -m).tar.gz
                      tar zxf swiftly-$(uname -m).tar.gz
                      ./swiftly init --quiet-shell-followup
                  fi
                  . "${SWIFTLY_HOME_DIR:-$HOME/.local/share/swiftly}/env.sh"
                  hash -r
                  echo "${SWIFTLY_HOME_DIR:-$HOME/.local/share/swiftly}/bin" >> $GITHUB_PATH

            - name: Install Swift using Swiftly
              run: |
                  # Source swiftly environment
                  . "${SWIFTLY_HOME_DIR:-$HOME/.local/share/swiftly}/env.sh"

                  # Read Swift version from .swift-version file
                  SWIFT_VERSION=$(cat .swift-version)
                  echo "Installing Swift version: $SWIFT_VERSION"

                  # Install and use the specified Swift version (skip if already installed)
                  if ! swiftly list | grep -q "$SWIFT_VERSION"; then
                      swiftly install $SWIFT_VERSION
                  fi
                  swiftly use $SWIFT_VERSION

            - name: Install GTK4 dependencies
              run: |
                  sudo apt-get update
                  sudo apt-get install -y libgtk-4-dev pkg-config

            - name: Configure and verify environment
              run: |
                  . "${SWIFTLY_HOME_DIR:-$HOME/.local/share/swiftly}/env.sh"
                  ./configure.sh

            - name: Build
              run: |
                  . "${SWIFTLY_HOME_DIR:-$HOME/.local/share/swiftly}/env.sh"
                  swift build

            - name: Test build in release mode
              run: |
                  . "${SWIFTLY_HOME_DIR:-$HOME/.local/share/swiftly}/env.sh"
                  swift build -c release

            - name: Test packaging flow
              run: |
                  . "${SWIFTLY_HOME_DIR:-$HOME/.local/share/swiftly}/env.sh"
                  chmod +x create-installer.sh
                  ./create-installer.sh -c debug
                  # Verify that packaging creates the expected files
                  ls -la .packaged/
                  [ -f .packaged/notes-manager-desktop-*-debug-linux-*.tar.gz ]

    test-macos:
        runs-on: macos-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Cache Swiftly installation
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.swiftly
                      swiftly.pkg
                  key: swiftly-macos-${{ runner.arch }}-v2

            - name: Cache Swift toolchain
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.swiftly/toolchains
                      ~/Library/Developer/Toolchains
                  key: swift-toolchain-macos-${{ hashFiles('.swift-version') }}-${{ runner.arch }}-v2

            - name: Cache Homebrew packages
              uses: actions/cache@v4
              with:
                  path: |
                      ~/Library/Caches/Homebrew
                      /usr/local/Homebrew/Library/Homebrew/vendor/cache
                      /opt/homebrew/Library/Homebrew/vendor/cache
                  key: homebrew-gtk4-${{ runner.os }}-v1
                  restore-keys: |
                      homebrew-gtk4-${{ runner.os }}-

            - name: Cache Swift build
              uses: actions/cache@v4
              with:
                  path: .build
                  key: swift-build-macos-${{ hashFiles('Package.swift', 'Sources/**/*.swift') }}-v1
                  restore-keys: |
                      swift-build-macos-

            - name: Install Swiftly
              run: |
                  if [ ! -f "${SWIFTLY_HOME_DIR:-$HOME/.swiftly}/bin/swiftly" ]; then
                      curl -O https://download.swift.org/swiftly/darwin/swiftly.pkg
                      installer -pkg swiftly.pkg -target CurrentUserHomeDirectory
                      ~/.swiftly/bin/swiftly init --quiet-shell-followup
                  fi
                  . "${SWIFTLY_HOME_DIR:-$HOME/.swiftly}/env.sh"
                  hash -r
                  echo "${SWIFTLY_HOME_DIR:-$HOME/.swiftly}/bin" >> $GITHUB_PATH

            - name: Install Swift using Swiftly
              run: |
                  # Source swiftly environment
                  . "${SWIFTLY_HOME_DIR:-$HOME/.swiftly}/env.sh"

                  # Read Swift version from .swift-version file
                  SWIFT_VERSION=$(cat .swift-version)
                  echo "Installing Swift version: $SWIFT_VERSION"

                  # Check if Swift version is already installed and working
                  if swiftly list | grep -q "$SWIFT_VERSION"; then
                      echo "Swift $SWIFT_VERSION found in swiftly list, testing if it works..."
                      if swiftly use $SWIFT_VERSION && swift --version 2>/dev/null | grep -q "$SWIFT_VERSION"; then
                          echo "Swift $SWIFT_VERSION is working correctly"
                      else
                          echo "Swift $SWIFT_VERSION installation appears corrupted, reinstalling..."
                          swiftly uninstall $SWIFT_VERSION || true
                          swiftly install $SWIFT_VERSION
                          swiftly use $SWIFT_VERSION
                      fi
                  else
                      echo "Swift $SWIFT_VERSION not found, installing..."
                      swiftly install $SWIFT_VERSION
                      swiftly use $SWIFT_VERSION
                  fi

            - name: Install GTK4 dependencies
              run: |
                  brew install gtk4 pkg-config

            - name: Configure and verify environment
              run: |
                  . "${SWIFTLY_HOME_DIR:-$HOME/.swiftly}/env.sh"
                  ./configure.sh

            - name: Build
              run: |
                  . "${SWIFTLY_HOME_DIR:-$HOME/.swiftly}/env.sh"
                  swift build

            - name: Test build in release mode
              run: |
                  . "${SWIFTLY_HOME_DIR:-$HOME/.swiftly}/env.sh"
                  swift build -c release

            - name: Test packaging flow
              run: |
                  . "${SWIFTLY_HOME_DIR:-$HOME/.swiftly}/env.sh"
                  chmod +x create-installer.sh
                  ./create-installer.sh -c debug
                  # Verify that packaging creates the expected files
                  ls -la .packaged/
                  [ -f .packaged/notes-manager-desktop-*-debug-macos-*.tar.gz ]
